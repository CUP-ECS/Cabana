add_executable(Direct directsum_example.cpp)
target_link_libraries(Direct cabanacore)
add_executable(Ewald ewaldsum_example.cpp)
target_link_libraries(Ewald cabanacore)

if(Cabana_ENABLE_Cuda)
  find_package(CUDA REQUIRED)
  if(CUDA_FOUND)
    add_executable(SPME spme_example.cpp)
    target_link_libraries(SPME cabanacore ${CUDA_CUFFT_LIBRARIES})
    target_compile_definitions(SPME PUBLIC Cabana_ENABLE_Cuda)
  endif()
  target_compile_definitions(Direct PUBLIC Cabana_ENABLE_Cuda)
  target_compile_definitions(Ewald PUBLIC Cabana_ENABLE_Cuda)
elseif()
  find_package(FFTW3)
  if(FFTW3_FOUND)
    add_executable(SPME spme_example.cpp)
    target_link_libraries(SPME cabanacore ${FFTW3_LIBRARIES})
  else()
    message(WARNING "Neither FFTW nor Cuda found, not building SPME executable")
  endif()
endif()


if(Cabana_ENABLE_OpenMP)
  target_compile_definitions(Direct PUBLIC Cabana_ENABLE_OpenMP)
  target_compile_definitions(Ewald PUBLIC Cabana_ENABLE_OpenMP)
  target_compile_definitions(SPME PUBLIC Cabana_ENABLE_OpenMP)
endif()
if(Cabana_ENABLE_Pthread)
  target_compile_definitions(Direct PUBLIC Cabana_ENABLE_Pthread)
  target_compile_definitions(Ewald PUBLIC Cabana_ENABLE_Pthread)
  target_compile_definitions(SPME PUBLIC Cabana_ENABLE_Pthread)
endif()
if(Cabana_ENABLE_Serial)
  target_compile_definitions(Direct PUBLIC Cabana_ENABLE_Serial)
  target_compile_definitions(Ewald PUBLIC Cabana_ENABLE_Serial)
  target_compile_definitions(SPME PUBLIC Cabana_ENABLE_Serial)
endif()


