name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 3 * * *'

jobs:
  CI:
    # FIXME: remove failing distributions here when passing
    continue-on-error: ${{ matrix.kokkos_ver == 'develop' || matrix.distro == 'fedora:latest' || matrix.distro == 'fedora:intel' || matrix.distro == 'ubuntu:devel' }}
    strategy:
      matrix:
        distro: ['ubuntu:latest']
        cxx: ['g++', 'clang++']
        openmp: ['ON', 'OFF']
        cmake_build_type: ['Debug', 'Release']
        kokkos_ver: ['3.2.01', 'master', 'develop']
        include:
          - distro: 'fedora:intel'
            cxx: 'icpc'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
          - distro: 'fedora:intel'
            cxx: 'icpc'
            openmp: 'ON'
            cmake_build_type: 'Debug'
            kokkos_ver: 'master'
          - distro: 'fedora:intel'
            cxx: 'icpc'
            openmp: 'OFF'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
            cxx_flags: ' -parallel'
          - distro: 'fedora:intel'
            cxx: 'icpc'
            openmp: 'OFF'
            cmake_build_type: 'Debug'
            kokkos_ver: 'master'
            cxx_flags: ' -parallel'
          - distro: 'fedora:latest'
            cxx: 'g++'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
          - distro: 'fedora:latest'
            cxx: 'clang++'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
          - distro: 'opensuse:latest'
            cxx: 'g++'
            cmake_build_type: 'Release'
            openmp: 'ON'
            kokkos_ver: 'master'
          - distro: 'opensuse:latest'
            cxx: 'clang++'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
          - distro: 'ubuntu:rolling'
            cxx: 'g++'
            cmake_build_type: 'Release'
            openmp: 'ON'
            kokkos_ver: 'master'
          - distro: 'ubuntu:rolling'
            cxx: 'clang++'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
          - distro: 'fedora:rawhide'
            cxx: 'g++'
            cmake_build_type: 'Release'
            openmp: 'ON'
            kokkos_ver: 'master'
          - distro: 'fedora:rawhide'
            cxx: 'clang++'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
          - distro: 'fedora:latest'
            cxx: 'g++'
            openmp: 'ON'
            cmake_build_type: 'Release'
            kokkos_ver: 'master'
            arborx: true
    runs-on: ubuntu-20.04
    container: ghcr.io/kokkos/ci-containers/${{ matrix.distro }}
    steps:
      - name: Get trail license
        if: ${{ matrix.cxx == 'icpc' }}
        run: |
          mkdir ~/Licenses
          curl https://dynamicinstaller.intel.com/api/v2/license > ~/Licenses/intel.lic
      - name: Checkout kokkos
        uses: actions/checkout@v2.2.0
        with:
          repository: kokkos/kokkos
          ref: ${{ matrix.kokkos_ver }}
          path: kokkos
      - name: Build kokkos
        working-directory: kokkos
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/kokkos \
            -DKokkos_ENABLE_OPENMP=${{ matrix.openmp }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DKokkos_ENABLE_HWLOC=ON \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout arborx
        if: ${{ martix.arborx }}
        uses: actions/checkout@v2.2.0
        with:
          repository: arborx/ArborX
          ref: master
          path: arborx
      - name: Build arborx
        if: ${{ martix.arborx }}
        working-directory: arborx
        run: |
          cmake -B build \
            -DCMAKE_PREFIX_PATH=${HOME}/kokkos
            -DCMAKE_INSTALL_PREFIX=$HOME/arborx \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout Cabana
        uses: actions/checkout@v2.2.0
      - name: Build Cabana
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/Cabana \
            -DMPIEXEC_MAX_NUMPROCS=2 -DMPIEXEC_PREFLAGS="--oversubscribe" \
            -DCMAKE_PREFIX_PATH="$HOME/kokkos;$HOME/arborx" \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_CXX_FLAGS="-Wall -pedantic --coverage ${{ matrix.cxx_flags }}" \
            -DCabana_ENABLE_TESTING=ON \
            -DCabana_ENABLE_EXAMPLES=ON \
            -DCabana_ENABLE_PERFORMANCE_TESTING=ON \
            -DCabana_PERFORMANCE_EXPECTED_FLOPS=0 \
            -DCMAKE_EXE_LINKER_FLAGS='--coverage' \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          CTEST_OUTPUT_ON_FAILURE=1 cmake --build build --target test
          cmake --install build
      - name: Format Cabana
        if: ${{ matrix.distro == 'ubuntu:latest' }}
        run: |
             cd build
             make format
             git diff --exit-code
      - name: Upload Report to codecov.io
        uses: codecov/codecov-action@v1
